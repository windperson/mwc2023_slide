---
title: "Blazor寫一次就討好Web＆App開發"
author: "老鮑伯"
format:
    # pptx:
    #    reference-doc: ../templates/template.pptx
    revealjs:
        slide-tone: false
        theme: simple
        menu:
            side: right
---


## Agenda

* Blazor Introduction
* WebRTC demo project

# Blazor Introduction

## What is (ASP.NET Core) Blazor？

* Blazor is a **Singla Page Application(SPA)** frammework for building interactive client-side web UI with .NET C# without "*too much*" client-side JavaScript.

:::: {.columns .smaller}

::: {.column width="70%"}

* Component-based architecture
* Different hosting models:
    * Blazor WebAssembly(Blazor WASM)
        * Blazor Hybrid
    * Blazor Server

:::

::: {.column width="30%"}

![<https://wikipedia.org/wiki/Blazor>](./pics/Blazor.png)

:::

::::

## Razor components

## CSS isolation for components

## Data binding

* One-way data binding
* Two-way data binding
* Event binding

## Event binding example {.scrollable}

```{.razor code-line-numbers="9,14-17"}
@page "/counter"

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
}
```


## Routing and Layouts

* [Kebab-case](https://developer.mozilla.org/docs/Glossary/Kebab_case) naming convention

## Dependency injection

* Use the `@inject` directive to inject services into components.
* Co-operate with the .NET Core DI container.

## JavaScript interop

* Call JavaScript functions from .NET methods.
* Call .NET methods from JavaScript functions.
* Using `[JSImport]` / `[JSExport]` attribute in Blazor WASM.(.NET 7+)

## Blazor Hybrid on .NET MAUI

:::: {.columns}

::: {.column width="50%"}

* The Blazor Hybrid can run on [.NET MAUI(Multi-platform App UI)](https://dotnet.microsoft.com/apps/maui) / [WPF](https://github.com/dotnet/wpf) / [Winform](https://github.com/dotnet/winforms) Native apps.
* We can use the same Blazor source code to build Web and App.  
(Reuse UI)

:::

::: {.column width="50%"}

![*VS 2022 project template*](./pics/BlazorMauiProjectTemplate.png){.r-stretch}

:::

::::

## Reuse UI for Web & App via RCL



# WebRTC demo project

## Project structure

# Conclusion

## Reference

* [ASP.NET Core Blazor](https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor)
* [Introduction to WebRTC protocols](https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Protocols)
* [Udemy - AspNetCore Blazor:The Big Picture](https://www.udemy.com/course/aspnet-core-blazor-the-big-picture/)
* [MS Learn - Build web applications with Blazor](https://learn.microsoft.com/en-us/training/paths/build-web-apps-with-blazor/)